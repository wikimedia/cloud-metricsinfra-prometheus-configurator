#!/usr/bin/env python3
# SPDX-FileCopyrightText: 2021-2024 Taavi Väänänen <hi@taavi.wtf>
# SPDX-License-Identifier: AGPL-3.0-only
"""
Create full Prometheus config files based on sources that might be editable by end users.
"""
from __future__ import annotations

import argparse
import glob
import logging
import pathlib

from prometheus_configurator import create_output
from prometheus_configurator.config import load_config_files
from prometheus_configurator.logging import setup_logging
from prometheus_configurator.manager import PrometheusManagerClient


def main():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('--config', help="Config file(s) used to instruct prometheus-configurator what to do.", action='append')
    parser.add_argument('--verbose', help="Enable verbose debug logging", action='store_true')
    args = parser.parse_args()

    setup_logging(logging.DEBUG if args.verbose else logging.INFO)

    config_files = []
    for config_glob in args.config:
        for file in glob.glob(config_glob):
            config_files.append(pathlib.Path(file))

    own_config = load_config_files(config_files)

    manager_client = PrometheusManagerClient(own_config.get("manager").get("url"))

    projects = manager_client.get_projects()

    for output_config in own_config.get("outputs"):
        output = create_output(output_config, own_config, manager_client)
        output.write(projects)


if __name__ == '__main__':
    main()
